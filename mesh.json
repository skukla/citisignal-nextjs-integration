{
  "meshConfig": {
    "sources": [
      {
        "name": "CommerceGraphQL",
        "handler": {
          "graphql": {
            "endpoint": "{env.ADOBE_COMMERCE_GRAPHQL_ENDPOINT}",
            "operationHeaders": {
              "Content-Type": "application/json",
              "Store": "{context.headers['store']}"
            }
          }
        },
        "transforms": [
          {
            "prefix": {
              "value": "Commerce_",
              "includeRootOperations": true
            }
          }
        ]
      },
      {
        "name": "CatalogServiceSandbox",
        "handler": {
          "graphql": {
            "endpoint": "{env.ADOBE_SANDBOX_CATALOG_SERVICE_ENDPOINT}",
            "operationHeaders": {
              "Content-Type": "application/json",
              "Magento-Environment-Id": "{context.headers['magento-environment-id']}",
              "Magento-Website-Code": "{context.headers['magento-website-code']}",
              "Magento-Store-View-Code": "{context.headers['magento-store-view-code']}",
              "Magento-Store-Code": "{context.headers['magento-store-code']}",
              "Magento-Customer-Group": "{context.headers['magento-customer-group']}",
              "X-Api-Key": "{context.headers['x-api-key']}",
              "Authorization": "{context.headers['Authorization']}"
            },
            "schemaHeaders": {
              "x-api-key": "{env.ADOBE_SANDBOX_CATALOG_API_KEY}"
            }
          }
        },
        "transforms": [
          {
            "prefix": {
              "value": "Catalog_",
              "includeRootOperations": true
            }
          }
        ],
        "responseConfig": {
          "headers": ["X-Magento-Cache-Id"]
        }
      },
      {
        "name": "LiveSearchSandbox",
        "handler": {
          "graphql": {
            "endpoint": "{env.ADOBE_SANDBOX_CATALOG_SERVICE_ENDPOINT}",
            "operationHeaders": {
              "Content-Type": "application/json",
              "Magento-Environment-Id": "{context.headers['magento-environment-id']}",
              "Magento-Website-Code": "{context.headers['magento-website-code']}",
              "Magento-Store-View-Code": "{context.headers['magento-store-view-code']}",
              "Magento-Store-Code": "{context.headers['magento-store-code']}",
              "X-Api-Key": "search_gql"
            },
            "schemaHeaders": {
              "Magento-Environment-Id": "{env.ADOBE_COMMERCE_ENVIRONMENT_ID}",
              "Magento-Website-Code": "{env.ADOBE_COMMERCE_WEBSITE_CODE}",
              "Magento-Store-View-Code": "{env.ADOBE_COMMERCE_STORE_VIEW_CODE}",
              "Magento-Store-Code": "{env.ADOBE_COMMERCE_STORE_CODE}",
              "X-Api-Key": "search_gql"
            }
          }
        },
        "transforms": [
          {
            "prefix": {
              "value": "Search_",
              "includeRootOperations": true
            }
          }
        ]
      }
    ],
    "transforms": [
      {
        "filterSchema": {
          "mode": "wrap",
          "filters": [
            "Query.{Citisignal_*, Catalog_productSearch}",
            "Type.!Mutation"
          ]
        }
      }
    ],
    "additionalTypeDefs": "extend type Catalog_ComplexProductView { manufacturer: String memory_options: [String] available_colors: [ColorOption] formatted_options: [ProductOption] is_on_sale: Boolean display_price: Float display_currency: String discount_percentage: Float in_stock: Boolean specifications: [Specification] } extend type Catalog_SimpleProductView { manufacturer: String is_on_sale: Boolean display_price: Float display_currency: String discount_percentage: Float in_stock: Boolean specifications: [Specification] } type ColorOption { name: String hex: String } type ProductOption { id: String title: String required: Boolean values: [OptionValue] } type OptionValue { id: String title: String value: String } type Specification { name: String value: String } type PageInfo { current_page: Int page_size: Int total_pages: Int } type ProductCard { id: String name: String sku: String manufacturer: String display_price: Float display_currency: String is_on_sale: Boolean discount_percentage: Float in_stock: Boolean images: [Catalog_ProductImage] specifications: [Specification] memory_options: [String] available_colors: [ColorOption] formatted_options: [ProductOption] } type ProductCardResult { items: [ProductCard] total_count: Int page_info: PageInfo } input Citisignal_ProductFilter { category: String manufacturer: String price_min: Float price_max: Float in_stock_only: Boolean on_sale_only: Boolean } extend type Query { Citisignal_productCards(phrase: String, filter: Citisignal_ProductFilter, limit: Int = 20, page: Int = 1): ProductCardResult }",
    "additionalResolvers": ["./resolvers.js"],
    "responseConfig": {
      "CORS": {
        "credentials": true,
        "exposedHeaders": ["Content-Range", "X-Content-Range", "X-Magento-Cache-Id"],
        "maxAge": 60480,
        "methods": ["GET", "POST"],
        "origin": "*"
      },
      "headers": {
        "mode": "no-cors",
        "x-include-metadata": "true"
      },
      "includeHTTPDetails": false,
      "cache": true
    }
  }
}
